// -*- C++ -*- generated by wxGlade 0.6.5 on Wed May 22 03:50:59 2013

#include "otherpanels.hpp"

BEGIN_EVENT_TABLE(PathSettingPanel, wxPanel)
   EVT_CHECKBOX(ID_BrowserCheck, PathSettingPanel::OnBrowserCheck)
   EVT_DIRPICKER_CHANGED(ID_DirPickerBrowser, PathSettingPanel::OnChangeDirPickerBrowser)
   EVT_DIRPICKER_CHANGED(ID_DirPickerBoardList, PathSettingPanel::OnChangeDirPickerBoardList)
   EVT_DIRPICKER_CHANGED(ID_DirPickerSkin, PathSettingPanel::OnChangeDirPickerSkin)
END_EVENT_TABLE()

/**
 * 各種パス設定用画面
 */
PathSettingPanel::PathSettingPanel(wxWindow* parent, int id, const wxPoint& pos, const wxSize& size, long style):
wxPanel(parent, id, pos, size, wxTAB_TRAVERSAL) {
     // begin wxGlade: PathSettingPanel::PathSettingPanel
     browserCheck = new wxCheckBox(this, ID_BrowserCheck, wxT("ブラウザを指定する"));
     label_1 = new wxStaticText(this, wxID_ANY, wxT("ブラウザのパス"));
     browserPathTC = new wxTextCtrl(this, 
				    ID_BrowserPathTC, 
				    wxEmptyString, 
				    wxDefaultPosition, 
				    wxDefaultSize,
				    wxTE_READONLY);
     dirPicker1 = new wxDirPickerCtrl(this, ID_DirPickerBrowser);
     label_2 = new wxStaticText(this, wxID_ANY, wxT("ログとボード一覧のフォルダ（次回起動時から有効）"));
     boardListTC = new wxTextCtrl(this, 
				  ID_BoardListTC, 
				  wxEmptyString,
				  wxDefaultPosition, 
				  wxDefaultSize,
				  wxTE_READONLY);
     dirPicker2 = new wxDirPickerCtrl(this, ID_DirPickerBoardList);
     label_3 = new wxStaticText(this, wxID_ANY, wxT("スキンのフォルダ（次回起動時から有効）"));
     skinPathTC = new wxTextCtrl(this, 
			       ID_SkinPathTC, 
			       wxEmptyString,
			       wxDefaultPosition, 
			       wxDefaultSize,
			       wxTE_READONLY);
     dirPicker3 = new wxDirPickerCtrl(this, ID_DirPickerSkin);

     set_properties();
     do_layout();
     // end wxGlade
}


void PathSettingPanel::set_properties() {
     bool specifyBrowser = false;
     wxString browserPath, boardListPath, skinPath;
     JaneCloneUtil::GetJaneCloneProperties(wxT("SPECIFY_DEFAULT_BROWSER"), &specifyBrowser);
     JaneCloneUtil::GetJaneCloneProperties(wxT("DEFAULT_BROWSER_PATH"), &browserPath);
     JaneCloneUtil::GetJaneCloneProperties(wxT("DEFAULT_BOARDLIST_PATH"), &boardListPath);
     JaneCloneUtil::GetJaneCloneProperties(wxT("DEFAULT_SKINFILE_PATH"), &skinPath);
     browserCheck->SetValue(specifyBrowser);
     browserPathTC->SetValue(browserPath);
     boardListTC->SetValue(boardListPath);
     skinPathTC->SetValue(skinPath);
}


void PathSettingPanel::do_layout() {
    // begin wxGlade: PathSettingPanel::do_layout
    wxGridSizer* grid_sizer_1 = new wxGridSizer(7, 2, 0, 0);
    grid_sizer_1->Add(browserCheck, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    grid_sizer_1->Add(20, 20, 0, wxEXPAND, 0);
    grid_sizer_1->Add(label_1, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    grid_sizer_1->Add(20, 20, 0, wxEXPAND, 0);
    grid_sizer_1->Add(browserPathTC, 0, wxALL|wxEXPAND, 5);
    grid_sizer_1->Add(dirPicker1, 1, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    grid_sizer_1->Add(label_2, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 5);
    grid_sizer_1->Add(20, 20, 0, wxEXPAND, 0);
    grid_sizer_1->Add(boardListTC, 0, wxALL|wxEXPAND, 5);
    grid_sizer_1->Add(dirPicker2, 1, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    grid_sizer_1->Add(label_3, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 5);
    grid_sizer_1->Add(20, 20, 0, wxEXPAND, 0);
    grid_sizer_1->Add(skinPathTC, 0, wxALL|wxEXPAND, 5);
    grid_sizer_1->Add(dirPicker3, 1, wxALL|wxALIGN_CENTER_VERTICAL, 5);
    SetSizer(grid_sizer_1);
    grid_sizer_1->Fit(this);
    // end wxGlade
}
