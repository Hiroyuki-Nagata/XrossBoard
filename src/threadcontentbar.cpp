/* JaneClone - a text board site viewer for 2ch
 * Copyright (C) 2012 Hiroyuki Nagata
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.

 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 *
 * Contributor:
 *	Hiroyuki Nagata <newserver002@gmail.com>
 */

// -*- C++ -*- generated by wxGlade 0.6.3 on Sat Dec 29 22:07:54 2012

#include "ThreadContentBar.h"

// begin wxGlade: ::extracode

// end wxGlade


ThreadContentBar::ThreadContentBar(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxWindow(parent, id, title, pos, size, wxDEFAULT_FRAME_STYLE)
{
    // begin wxGlade: ThreadContentBar::ThreadContentBar
    threadContentsBarUpperSizer = new wxPanel(this, wxID_ANY);
    threadName = new wxStaticText(threadContentsBarUpperSizer, wxID_ANY, wxT("スレッド名"));
    spacePanel1 = new wxPanel(threadContentsBarUpperSizer, wxID_ANY);
    autoReloadButton = new wxBitmapButton(threadContentsBarUpperSizer, wxID_ANY, wxBitmap(wxT("C:\\MinGW\\msys-1.0.16\\local\\src\\tango-icon-theme-0.8.90\\16x16\\actions\\appointment-new.png"), wxBITMAP_TYPE_ANY));
    redResExtractButton = new wxBitmapButton(threadContentsBarUpperSizer, wxID_ANY, wxBitmap(wxT("C:\\MinGW\\msys-1.0.16\\local\\src\\tango-icon-theme-0.8.90\\16x16\\actions\\system-search.png"), wxBITMAP_TYPE_ANY));
    refleshButton = new wxBitmapButton(threadContentsBarUpperSizer, wxID_ANY, wxBitmap(wxT("C:\\MinGW\\msys-1.0.16\\local\\src\\tango-icon-theme-0.8.90\\16x16\\actions\\view-refresh.png"), wxBITMAP_TYPE_ANY));
    scrollToNewResponseButton = new wxBitmapButton(threadContentsBarUpperSizer, wxID_ANY, wxBitmap(wxT("C:\\MinGW\\msys-1.0.16\\local\\src\\tango-icon-theme-0.8.90\\16x16\\actions\\go-bottom.png"), wxBITMAP_TYPE_ANY));
    stopButton = new wxBitmapButton(threadContentsBarUpperSizer, wxID_ANY, wxBitmap(wxT("C:\\MinGW\\msys-1.0.16\\local\\src\\tango-icon-theme-0.8.90\\16x16\\status\\dialog-error.png"), wxBITMAP_TYPE_ANY));
    resExtractButton = new wxBitmapButton(threadContentsBarUpperSizer, wxID_ANY, wxBitmap(wxT("C:\\MinGW\\msys-1.0.16\\local\\src\\tango-icon-theme-0.8.90\\16x16\\actions\\edit-find-replace.png"), wxBITMAP_TYPE_ANY));
    newThreadButton = new wxBitmapButton(threadContentsBarUpperSizer, wxID_ANY, wxBitmap(wxT("C:\\MinGW\\msys-1.0.16\\local\\src\\tango-icon-theme-0.8.90\\16x16\\actions\\go-last.png"), wxBITMAP_TYPE_ANY));
    responseButton = new wxBitmapButton(threadContentsBarUpperSizer, wxID_ANY, wxBitmap(wxT("C:\\MinGW\\msys-1.0.16\\local\\src\\tango-icon-theme-0.8.90\\16x16\\actions\\format-justify-left.png"), wxBITMAP_TYPE_ANY));
    bookMarkButton = new wxBitmapButton(threadContentsBarUpperSizer, wxID_ANY, wxBitmap(wxT("C:\\MinGW\\msys-1.0.16\\local\\src\\tango-icon-theme-0.8.90\\16x16\\actions\\bookmark-new.png"), wxBITMAP_TYPE_ANY));
    deleteLogButton = new wxBitmapButton(threadContentsBarUpperSizer, wxID_ANY, wxBitmap(wxT("C:\\MinGW\\msys-1.0.16\\local\\src\\tango-icon-theme-0.8.90\\16x16\\actions\\edit-delete.png"), wxBITMAP_TYPE_ANY));
    closeButton = new wxBitmapButton(threadContentsBarUpperSizer, wxID_ANY, wxBitmap(wxT("C:\\MinGW\\msys-1.0.16\\local\\src\\tango-icon-theme-0.8.90\\16x16\\emblems\\emblem-unreadable.png"), wxBITMAP_TYPE_ANY));
    nomalSearchButton = new wxBitmapButton(this, wxID_ANY, wxBitmap(wxT("C:\\MinGW\\msys-1.0.16\\local\\src\\tango-icon-theme-0.8.90\\16x16\\actions\\system-search.png"), wxBITMAP_TYPE_ANY));
    const wxString *searchWordCombo_choices = NULL;
    searchWordCombo = new wxComboBox(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, 0, searchWordCombo_choices, wxCB_DROPDOWN);
    backwordButton = new wxButton(this, wxID_ANY, wxT("前へ"));
    forwardButton = new wxButton(this, wxID_ANY, wxT("次へ"));
    panel_2 = new wxPanel(this, wxID_ANY);
    hideSearchBarButton = new wxBitmapButton(this, wxID_ANY, wxBitmap(wxT("C:\\MinGW\\msys-1.0.16\\local\\src\\tango-icon-theme-0.8.90\\16x16\\emblems\\emblem-unreadable.png"), wxBITMAP_TYPE_ANY));
    panel_1 = new wxPanel(this, wxID_ANY);

    set_properties();
    do_layout();
    // end wxGlade
}


void ThreadContentBar::set_properties()
{
    // begin wxGlade: ThreadContentBar::set_properties
    SetTitle(wxT("frame_1"));
    SetSize(wxSize(1001, 480));
    threadName->SetFont(wxFont(12, wxMODERN, wxNORMAL, wxNORMAL, 0, wxT("")));
    autoReloadButton->SetSize(autoReloadButton->GetBestSize());
    redResExtractButton->SetSize(redResExtractButton->GetBestSize());
    refleshButton->SetSize(refleshButton->GetBestSize());
    scrollToNewResponseButton->SetSize(scrollToNewResponseButton->GetBestSize());
    stopButton->SetSize(stopButton->GetBestSize());
    resExtractButton->SetSize(resExtractButton->GetBestSize());
    newThreadButton->SetSize(newThreadButton->GetBestSize());
    responseButton->SetSize(responseButton->GetBestSize());
    bookMarkButton->SetSize(bookMarkButton->GetBestSize());
    deleteLogButton->SetSize(deleteLogButton->GetBestSize());
    closeButton->SetSize(closeButton->GetBestSize());
    nomalSearchButton->SetSize(nomalSearchButton->GetBestSize());
    hideSearchBarButton->SetSize(hideSearchBarButton->GetBestSize());
    // end wxGlade
}


void ThreadContentBar::do_layout()
{
    // begin wxGlade: ThreadContentBar::do_layout
    wxBoxSizer* threadContentsBarSizer = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* horizonalSizer2 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* horizonalSizer1 = new wxBoxSizer(wxHORIZONTAL);
    horizonalSizer1->Add(threadName, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    horizonalSizer1->Add(spacePanel1, 1, wxEXPAND, 0);
    horizonalSizer1->Add(autoReloadButton, 0, wxALIGN_RIGHT, 0);
    horizonalSizer1->Add(redResExtractButton, 0, wxALIGN_RIGHT, 0);
    horizonalSizer1->Add(refleshButton, 0, wxALIGN_RIGHT, 0);
    horizonalSizer1->Add(scrollToNewResponseButton, 0, wxALIGN_RIGHT, 0);
    horizonalSizer1->Add(stopButton, 0, 0, 0);
    horizonalSizer1->Add(resExtractButton, 0, 0, 0);
    horizonalSizer1->Add(newThreadButton, 0, 0, 0);
    horizonalSizer1->Add(responseButton, 0, 0, 0);
    horizonalSizer1->Add(bookMarkButton, 0, 0, 0);
    horizonalSizer1->Add(deleteLogButton, 0, 0, 0);
    horizonalSizer1->Add(closeButton, 0, 0, 0);
    threadContentsBarUpperSizer->SetSizer(horizonalSizer1);
    threadContentsBarSizer->Add(threadContentsBarUpperSizer, 0, wxEXPAND, 0);
    horizonalSizer2->Add(nomalSearchButton, 0, 0, 0);
    horizonalSizer2->Add(searchWordCombo, 0, 0, 0);
    horizonalSizer2->Add(backwordButton, 0, 0, 0);
    horizonalSizer2->Add(forwardButton, 0, 0, 0);
    horizonalSizer2->Add(panel_2, 1, wxEXPAND, 0);
    horizonalSizer2->Add(hideSearchBarButton, 0, wxALIGN_RIGHT, 0);
    threadContentsBarSizer->Add(horizonalSizer2, 0, wxEXPAND, 0);
    threadContentsBarSizer->Add(panel_1, 1, wxEXPAND, 0);
    SetSizer(threadContentsBarSizer);
    Layout();
    // end wxGlade
}

