// -*- C++ -*- generated by wxGlade 0.6.3 on Tue Nov 01 01:42:24 2011

#include "JaneClone.h"

// boostの名前空間を使う
//using namespace boost::asio;
using namespace std;

// enum
enum {
    ID_Quit = 1,
    ID_About,
    ID_GetBoardList,
    ID_GetVersionInfo
};

// event table
BEGIN_EVENT_TABLE(JaneClone, wxFrame)
	// メニューバーにあるコマンド入力で起動するメソッドのイベントテーブル
    EVT_MENU(ID_Quit, JaneClone::OnQuit)
    EVT_MENU(ID_About, JaneClone::OnAbout)
    EVT_MENU(ID_GetBoardList, JaneClone::OnGetBoardList)
    EVT_MENU(ID_GetVersionInfo, JaneClone::OnVersionInfo)
END_EVENT_TABLE()


JaneClone::JaneClone(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxFrame(parent, id, title, pos, size, wxDEFAULT_FRAME_STYLE)
{
	// メニューバーの設置
	wxMenuBar *menuBar = new wxMenuBar;
    wxMenu *menu1 = new wxMenu;
    menu1->Append(ID_About, wxT("このソフトについて..."));
    menu1->Append(ID_Quit, wxT("終了"));
    wxMenu *menu2 = new wxMenu;
    wxMenu *menu3 = new wxMenu;
    menu3->Append(ID_GetBoardList, wxT("板一覧更新"));
    wxMenu *menu4 = new wxMenu;
    wxMenu *menu5 = new wxMenu;
    wxMenu *menu6 = new wxMenu;
    wxMenu *menu7 = new wxMenu;
    wxMenu *menu8 = new wxMenu;
    wxMenu *menu9 = new wxMenu;
    menu9->Append(ID_GetVersionInfo, wxT("バージョン情報を開く"));
    menuBar->Append(menu1, wxT("ファイル"));
    menuBar->Append(menu2, wxT("表示"));
    menuBar->Append(menu3, wxT("板一覧"));
    menuBar->Append(menu4, wxT("スレッド一覧"));
    menuBar->Append(menu5, wxT("お気に入り"));
    menuBar->Append(menu6, wxT("検索"));
    menuBar->Append(menu7, wxT("ウィンドウ"));
    menuBar->Append(menu8, wxT("ツール"));
    menuBar->Append(menu9, wxT("ヘルプ"));

    SetMenuBar(menuBar);// メニューバー設置終わり

	// SetMinimumPaneSizeによってペインが合体しないように設定
    window_1 = new wxSplitterWindow(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxSP_3D|wxSP_BORDER);
    window_1->SetMinimumPaneSize(20);
    window_1_pane_2 = new wxPanel(window_1, wxID_ANY);
    window_1_pane_1 = new wxPanel(window_1, wxID_ANY);

    window_2 = new wxSplitterWindow(window_1_pane_2, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxSP_3D|wxSP_BORDER);
    window_2->SetMinimumPaneSize(20);


    //URL入力欄の表示部分
    label_1 = new wxStaticText(this, wxID_ANY, wxT("URL:"));
    textCtlForURL = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_1 = new wxButton(this, wxID_ANY, wxT("GO"));

    //板一覧を取得してツリー表示
    m_tree_ctrl = new wxTreeCtrl(window_1_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTR_HAS_BUTTONS|wxTR_DEFAULT_STYLE|wxSUNKEN_BORDER);
    window_2_pane_1 = new wxPanel(window_2, wxID_ANY);
    window_2_pane_2 = new wxPanel(window_2, wxID_ANY);

    SetProperties();
    DoLayout();
    this->CreateStatusBar();
	this->SetStatusText(wxT(" 完了"));
}


void JaneClone::SetProperties()
{
    // wxGladeによる自動生成
    SetTitle(_("JaneClone"));
    SetSize(wxSize(960, 540));
    label_1->SetFont(wxFont(9, wxDEFAULT, wxNORMAL, wxNORMAL, 0, wxT("MS Shell Dlg 2")));

    // 板一覧情報を反映する
    wxImageList *treeImage = new wxImageList(16,16);
    wxBitmap idx1 = wxArtProvider::GetBitmap(wxART_FOLDER,wxART_OTHER );
    wxBitmap idx2 = wxArtProvider::GetBitmap(wxART_NEW,wxART_OTHER);
    treeImage->Add(idx1);
    treeImage->Add(idx2);
    m_tree_ctrl->AssignImageList(treeImage);

	// 板一覧情報のツリーコントロール
    m_treeData = new wxTreeItemData();
    m_rootId = m_tree_ctrl->AddRoot(wxT("2ch板一覧"), 0, 0, m_treeData);

	// もし板一覧ファイルがdatフォルダに存在するならば一気に板一覧設定に飛ぶ
	if(wxFile::Exists(wxT("./dat/BoardListUTF8.html"))){ JaneClone::SetBoardList();}
}


void JaneClone::DoLayout()
{
    // 各種サイザー設定
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_2 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_3 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_4 = new wxBoxSizer(wxHORIZONTAL);

    // 一番上のURL入力欄など
    sizer_2->Add(label_1, 0, wxALL|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 0);
    sizer_2->Add(textCtlForURL, 2, wxALL|wxEXPAND, 0);
    sizer_2->Add(button_1, 0, 0, 0);

    sizer_1->Add(sizer_2, 0, wxALL|wxEXPAND, 2);

    // 下部のスプリットウィンドウの設定
    // Sizer3にツリーコントロールが入る
    sizer_3->Add(m_tree_ctrl, 1, wxEXPAND, 0);
    window_1_pane_1->SetSizer(sizer_3);

	// スプリットウィンドウ(横の区切り)
    window_2->SplitHorizontally(window_2_pane_1, window_2_pane_2);
    sizer_4->Add(window_2, 1, wxEXPAND, 0);
    window_1_pane_2->SetSizer(sizer_4);

    // 上部のタブを設定してみる
    wxBoxSizer *topNote = new wxBoxSizer(wxVERTICAL);
	wxNotebook *nb = new wxNotebook(window_2_pane_1,
									-1,
									wxPoint(-1, -1),
									wxSize(-1, -1),
									wxNB_TOP);

	wxPanel *window1 = new wxPanel(nb, wxID_ANY);
	window1->SetScrollbar(wxVERTICAL, 0, 16, 50);
	nb->AddPage(window1, wxT("こころちゃーん"), true);
	wxPanel *window2 = new wxPanel(nb, wxID_ANY);
	window2->SetScrollbar(wxVERTICAL, 0, 16, 50);
	nb->AddPage(window1, wxT("シャロですよー"), true);

	topNote->Add(nb, 0, wxEXPAND, 10);
	window_2_pane_1->SetSizer(topNote);

    // スプリットウィンドウ(縦の区切り)
    window_1->SplitVertically(window_1_pane_1, window_1_pane_2);
    sizer_1->Add(window_1, 1, wxEXPAND, 0);
    SetSizer(sizer_1);


    Layout();
    // end wxGlade
}



void JaneClone::OnQuit(wxCommandEvent&)
{
	Close(true);
}

void JaneClone::OnAbout(wxCommandEvent&)
{
}

// 板一覧のツリーがクリックされたときに起きるイベント
void JaneClone::OnGetBoardInfo(wxTreeEvent& event)
{
	//wxTreeItemId selectedItem = event.GetItem();
	//this->SetStatusText(selectedItem->GetItemText());
	//this->SetStatusText(m_tree_ctrl->GetItemText(event.GetItem()));
	//this->SetStatusText(wxT("テストです"));
	wxDialog* dialog = new wxDialog(NULL, wxID_ANY,
								wxT("一応イベントは反応してるみたいじゃぞ"),
								wxDefaultPosition,
								wxSize(300,300));
	dialog->Show(true);
}

// 板一覧更新処理
void JaneClone::OnGetBoardList(wxCommandEvent&) {
	// もし板一覧ファイルがdatフォルダに存在するならば一気に板一覧設定に飛ぶ
	if(wxFile::Exists(wxT("./dat/BoardListUTF8.html"))){
		JaneClone::SetBoardList();
	// そうでなければ板一覧をダウンロードしてくる
	}else{
		JaneClone::DownloadBoardList();
		JaneClone::DecommpressFile();
		JaneClone::ConvertSJISToUTF8();
		JaneClone::SetBoardList();
	}
}

// 板一覧ファイルをダウンロードする処理
void JaneClone::DownloadBoardList(){

	// ここから
	wxHTTP http;
	http.SetHeader(_T("Accept-Encoding"),_T("gzip"));
	http.SetHeader(_T("Host"),_T("menu.2ch.net"));
	http.SetHeader(_T("Accept"),_T(""));
	http.SetHeader(_T("Referer"),_T("http://menu.2ch.net/"));
	http.SetHeader(_T("Accept-Language"),_T("ja"));
	http.SetHeader(_T("User-Agent"),_T("Mozilla/5.0"));
	http.SetTimeout(5);

	wxString server = "menu.2ch.net";
	wxString path	= "/bbsmenu.html";
	wxString msg	= "";

	// 保存先を決める
	wxFileOutputStream output(wxT("./dat/BoardList.gzip"));
	wxDataOutputStream store(output);

	if(http.Connect(server,80)){
		msg = wxT("接続しました");
		wxInputStream *stream;
		stream = http.GetInputStream(path);

		if(stream == NULL){
			msg = wxT("ストリームを受け取ることができませんでした。");
		}else{
			unsigned char buffer[1024];
			int byteRead;
			int totalRead;

			msg = wxT("ストリームを受け取りました");
			totalRead = 0;

			while(!stream->Eof()){
				stream->Read(buffer, sizeof(buffer));
				store.Write8(buffer, sizeof(buffer));
				byteRead=stream->LastRead();
				if(byteRead<=0){break;}
				totalRead+=byteRead;
			}
			wxString stringInt = wxString::Format(wxT("%i"),totalRead);
			stringInt += wxT("バイト読み込みました。");
			msg = stringInt;
		}
	}else{
	msg = wxT("サーバーに接続できませんでした");
	}
	wxMessageBox(msg);
}

// ダウンロードした板一覧ファイルを解凍する処理
void JaneClone::DecommpressFile(){
    // gzファイルをZlibを使って解凍する
    gzFile infile = gzopen("./dat/BoardList.gzip", "rb");
    FILE *outfile = fopen("./dat/BoardListSJIS.html", "wb");

    char buffer[128];
    int num_read = 0;
    while ((num_read = gzread(infile, buffer, sizeof(buffer))) > 0) {
	fwrite(buffer, 1, num_read, outfile);
    }

    // ファイルポインタを閉じる
    gzclose(infile);
    fclose(outfile);
}

// ダウンロードしたファイルの文字コードをShift-JISからUTF-8に変換する処理
void JaneClone::ConvertSJISToUTF8(){
  iconv_t icd;
  FILE *fp_src, *fp_dst;
  char s_src[S_SIZE], s_dst[S_SIZE];
  const char *p_src;
  char *p_dst;
  size_t n_src, n_dst;

  icd = iconv_open("UTF-8", "Shift_JIS");
  fp_src = fopen("./dat/BoardListSJIS.html", "r");
  fp_dst = fopen("./dat/BoardListUTF8.html", "w");

  while(true){
    fgets(s_src, S_SIZE, fp_src);
    if (feof(fp_src))
      break;
    p_src = s_src;
    p_dst = s_dst;
    n_src = strlen(s_src);
    n_dst = S_SIZE-1;
    while(0 < n_src){
      iconv(icd, &p_src, &n_src, &p_dst, &n_dst);
    }
    *p_dst = '\0';
    fputs(s_dst, fp_dst);
  }

  fclose(fp_dst);
  fclose(fp_src);
  iconv_close(icd);
}

// 取得した板一覧ファイルからデータを抽出してレイアウトに反映するメソッド
void JaneClone::SetBoardList(){

	// インスタンスを作る
	ExtractBoardList *ebl = new ExtractBoardList();
	// 板一覧の情報が入ったリストをもらう
	wxArrayString boardListArray = ebl->GetBoardList();
	// フラグ
	boolean category_flag = false;
	wxString categoryName;
	wxString prefix = "c:";
	wxTreeItemId category;

	// GUIにツリーコントロールを反映する
	// 2chの入り口, 2ch総合案内を除外しているのでループ変数は3から始まる
	// あと最後の方の余分なURLも除外している。 -- サーバに変更があった場合困るなあ…
	for (int i=3;i < boardListArray.size() -1;i++) {
		// 文字列が入っていなければツリーには入れない
		if (!boardListArray[i].IsSameAs("")) {
			// カテゴリフォルダだったらフラグ立てる
			if (boardListArray[i].Contains(prefix)){
				category_flag = true;
				categoryName = boardListArray[i];
			}
			// カテゴリフォルダに当たる場合フォルダアイコンとしてツリーに登録
			if (category_flag) {
				category = m_tree_ctrl->AppendItem(m_rootId,categoryName, 0, 0, m_treeData);
				category_flag = false;
			} else {
				m_tree_ctrl->AppendItem(category, boardListArray[i], 1, 1, m_treeData);
			}
		}
	}
}

// バージョン情報が書かれたダイアログを表示する処理
void JaneClone::OnVersionInfo(wxCommandEvent&)
{
	wxMessageDialog dialog( NULL,
							wxT("Jane Clone Version 1.00 \n\n Copyright(C) 2011 Nantonaku-Shiawase \n\n http://d.hatena.ne.jp/panzer-jagdironscrap1/"),
							wxT("バージョン情報"),
							wxOK|wxICON_INFORMATION);
	dialog.ShowModal();
}




